networks:
  ecomm-nw:
    driver: bridge
    name: ecomm-nw

services:
  zookeeper:
    image: "confluentinc/cp-zookeeper:5.2.1"
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ecomm-nw

# This has three listeners you can experiment with. 
# BOB for internal traffic on the Docker network
# FRED for traffic from the Docker-host machine (`localhost`)
# ALICE for traffic from outside, reaching the Docker host on the DNS name `never-gonna-give-you-up`
# Use 
  kafka:
    image: "confluentinc/cp-kafka:latest"
    container_name: kafka
    networks:
      - ecomm-nw    
    ports:
      - '9092:9092'
      - '29094:29094'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: LISTENER_BOB://kafka:29092,LISTENER_FRED://localhost:9092,LISTENER_ALICE://kafka:29094
      KAFKA_ADVERTISED_LISTENERS: LISTENER_BOB://kafka:29092,LISTENER_FRED://localhost:9092,LISTENER_ALICE://never-gonna-give-you-up:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_BOB:PLAINTEXT,LISTENER_FRED:PLAINTEXT,LISTENER_ALICE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_BOB
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
    volumes:
      - kafka-data:/var/lib/kafka/data

  mongodb:
    image: mongo:latest
    container_name: mongodb
    networks:
      - ecomm-nw
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  mysql:
    image: 'mysql:latest'
    container_name: mysql
    environment:
      - 'MYSQL_DATABASE=mydb'
      - 'MYSQL_PASSWORD=abc'
      - 'MYSQL_ROOT_PASSWORD=aaa'
      - 'MYSQL_USER=murat'
    networks:
      - ecomm-nw
    ports:
      - '3306'
    volumes:
      - mysql-data:/data/mysqldb

  # kafkacat:
  #   image: confluentinc/cp-kafkacat
  #   command: sleep infinity

volumes:
  kafka-data:
  mongo-data:
  mysql-data:
